---@type vim.lsp.Config
return {
   cmd = { 'tailwindcss-language-server', '--stdio' },
   filetypes = {
      'html',
      'mdx',
      'javascript',
      'javascriptreact',
      'reason',
      'rescript',
      'typescript',
      'typescriptreact',
      'vue',
      'svelte',
      'astro',
      'django-html',
      'htmldjango',
      'gohtml',
      'gohtmltmpl',
      'htmlangular',
      'html-eex',
      'markdown',
      'php',
      'css',
      'less',
      'postcss',
      'sass',
      'scss',
      'stylus',
      'sugarss',
   },
   root_markers = {
      'tailwind.config.js',
      'tailwind.config.cjs',
      'tailwind.config.mjs',
      'tailwind.config.ts',
      'postcss.config.js',
      'postcss.config.cjs',
      'postcss.config.mjs',
      'postcss.config.ts',
      'vite.config.js',
   },
   settings = {
      tailwindCSS = {
         validate = true,
         lint = {
            cssConflict = 'warning',
            invalidApply = 'error',
            invalidScreen = 'error',
            invalidTailwindDirective = 'error',
            invalidVariant = 'error',
            recommendedVariantOrder = 'warning',
            invalidConfigPath = 'error',
         },
         classAttributes = {
            'class',
            'className',
            'class:list',
            'classList',
            'ngClass',
         },
         includeLanguages = {
            eelixir = 'html-eex',
            eruby = 'erb',
            templ = 'html',
            htmlangular = 'html',
         },
         experimental = {
            classRegex = {
               'tw`([^`]*)',
               'tw="([^"]*)',
               'tw={"([^"}]*)',
               'tw\\.\\w+`([^`]*)',
               'tw\\(.*?\\)`([^`]*)',
               { 'clsx\\(([^)]*)\\)', "(?:'|\"|`)([^']*)(?:'|\"|`)" },
               { 'classnames\\(([^)]*)\\)', "'([^']*)'" },
               { 'cva\\(([^)]*)\\)', '["\'`]([^"\'`]*).*?["\'`]' },
            },
         },
      },
   },
}
